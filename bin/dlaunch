#!/bin/sh
# Launch a file selected with rofi.

usage() {
cat << EOF
Usage: $(basename "$0") [options]... <dir> <cmd>

Options:
  -s    Strip file extensions.
  -i    Ignore lines matching extended POSIX regex.

Recursively list files in dir with the given
extensions in rofi, and execute them with cmd.
If an extension is specified, it will be stripped
from the results.

Depends on: rofi
EOF
}

stripext= # extension is stripped if set
ignorepat= # POSIX regex of patterns to ignore
while getopts 'si:h' opt; do
    case "$opt" in
        s) stripext=1 ;;
        i) ignorepat="$OPTARG" ;;
        h|*) usage; exit 0 ;;
    esac
done

shift $((OPTIND - 1))

if [ $# -lt 2 ]; then
    usage
    exit 0
fi

dir="$1"
cmd="$2"

cd "$dir" || {
    echo >&2 "Failed to enter directory $dir"
    exit 1
}

# Directory where the script starts.
basedir="$PWD"

filter_pat() {
    if [ -z "$ignorepat" ]; then
        cat
    else
        grep -E -v "$ignorepat"
    fi
}

# List files in current directory, with directories
# suffixed with '/', followed by files.
list_files() {
    # If already in a subdirectory, list ..
    [ "$PWD" != "$basedir" ] && echo ..

    {
        # First, list directories suffixed with '/'.
        find . -maxdepth 1 -type d ! -path . |
            sed 's|$|/|' |
            sort

        # Then list files in curr dir.
        find . -maxdepth 1 -type f |
            sort

    } |

    # Strip leading ./
    sed 's|^\./||' |

    filter_pat
}

# Launch a rofi dialog with the content of the current dir,
# with directories sufffixed with a '/', followed by the
# files. The extension is optionally removed.
sel() {

    # Store a list of files and directories.
    files="$(list_files)"

    echo "$files" |

    # Strip the extension if needed.
    sed -e '' ${stripext:+-e 's|\([^/]\+\)\.[^/ \t]\+$|\1|'} |

    # In -format, d provides the index (1-N) and s the string.
    # -i disables case sensitivity.
    rofi -dmenu -i -format 'd:s' |

    {
        # Detect if a directory is chosen. If
        # it is, then recurse into the directory.
        # If .. is chosen, recurse up a directory.
        IFS=:
        read -r index selection

        case "$selection" in
            '') exit 0 ;;
            ..) cd .. && sel ;;
            */) cd "$selection" && sel;;
            *)
                if [ "$stripext" != 1 ]; then
                    "$cmd" "$PWD/$selection"
                else
                    # Get name of Nth file in list.
                    fname="$(
                        echo "$files"     |
                        tail -n +"$index" |
                        head -n 1
                    )"
                    "$cmd" "$PWD/$fname"
                fi
                ;;
        esac
    }
}

sel
